@int P(int n)
  if n < 2, return 0
  #dividorsSum = 1
  #root = Math.sqrt(n)
  for #i range(2, @int(root)), if 0 == (n % i)
    dividorsSum += i
    if i < root, dividorsSum += n / i
  <
  return dividorsSum
<

@Subject classify(int from, int to)
  #deficient = 0
  #perfect = 0
  #abundant = 0
  for #n range(from, to)
    #ds = P(n)
    if ds < n, ++deficient
    elf ds > n, ++abundant
    elf, ++perfect
  <
  return [
    $deficient [ deficient ]
    $perfect [ perfect ]
    $abundant [ abundant ]
  ]
<

#result = classify(1, 20_000)
pln("deficient: #{result:$deficient:asInt}")
pln("perfect: #{result:$perfect:asInt}")
pln("abundant: #{result:$abundant:asInt}")